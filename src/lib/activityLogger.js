import { db } from './firebase/config';
import { collection, addDoc, serverTimestamp } from 'firebase/firestore';
import { auth } from './firebase/config';

const activityLogsRef = collection(db, 'activityLogs');

// interface ActivityLog {
//   id?: string; // Auto-generated by Firestore
//   type: 'student_added' | 'student_updated' | 'student_deleted' | 
//         'subject_added' | 'subject_updated' | 'subject_deleted' |
//         'enrollment_created' | 'user_created' | 'user_updated' | 'user_deleted';
//   userId: string;
//   userName: string;
//   targetId: string;
//   targetName: string;
//   description: string;
//   timestamp: firestore.Timestamp;
//   department?: 'college' | 'tvet' | 'shs' | 'jhs';
// }

export const logActivity = async (activityData) => {
  try {
    const user = auth.currentUser;
    
    const logEntry = {
      ...activityData,
      userId: user?.uid || 'system',
      userName: user?.displayName || 'System',
      timestamp: serverTimestamp()
    };
    
    await addDoc(activityLogsRef, logEntry);
  } catch (error) {
    console.error("Error logging activity:", error);
  }
};

// Specific activity loggers
export const logStudentActivity = async (type, student, additionalData = {}) => {
  await logActivity({
    type,
    targetId: student.id,
    targetName: `${student.firstName} ${student.lastName}`,
    description: `${type.replace('_', ' ')}: ${student.firstName} ${student.lastName} (${student.studentId})`,
    department: student.department,
    ...additionalData
  });
};

export const logSubjectActivity = async (type, subject, additionalData = {}) => {
  await logActivity({
    type,
    targetId: subject.id,
    targetName: subject.subjectName,
    description: `${type.replace('_', ' ')}: ${subject.subjectName} (${subject.subjectId})`,
    ...additionalData
  });
};

export const logUserActivity = async (type, user, additionalData = {}) => {
  await logActivity({
    type,
    targetId: user.id,
    targetName: `${user.firstName} ${user.lastName}`,
    description: `${type.replace('_', ' ')}: ${user.firstName} ${user.lastName} (${user.email})`,
    ...additionalData
  });
};

export const logEnrollmentActivity = async (type, student, enrollmentData, additionalData = {}) => {
  await logActivity({
    type,
    targetId: student.id,
    targetName: `${student.firstName} ${student.lastName}`,
    description: `Enrollment ${type.replace('_', ' ')} for ${student.firstName} ${student.lastName} in ${enrollmentData.course}`,
    department: student.department,
    ...additionalData
  });
};